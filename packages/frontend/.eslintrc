{
  "env": {
    "browser": true,
    "es2020": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react-refresh",
    "import",
    "react",
    "react-hooks"
  ],
  "rules": {
    "react-refresh/only-export-components": "warn",
    "object-shorthand": "error",
    "no-console": [
      "error",
      {
        "allow": [
          "error"
        ]
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_"
      }
    ],
    "no-restricted-imports": "off",
    "@typescript-eslint/no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": [
              "@/**/internal/**/*",
              "./*/**/internal/**/*",
              "../**/internal/**/*"
            ],
            "message": "Do not import internal modules."
          },
          {
            "group": [
              "@google/model-viewer"
            ],
            "message": "DO NOT import @google/model-viewer."
          }
        ],
        "paths": [
          {
            "name": "react-hook-form",
            "importNames": [
              "useForm"
            ],
            "message": "Please import from @/hooks/useForm instead."
          },
          {
            "name": "@hookform/resolvers/yup",
            "importNames": [
              "yupResolver"
            ],
            "message": "Please import { resolver } from @/utils/validation/validation.ts instead."
          },
          {
            "name": "axios",
            "message": "Please import { useAppSWR } from '@/utils/axios' instead."
          }
        ]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external"
        ],
        "pathGroups": [
          {
            "pattern": "@/**",
            "group": "external",
            "position": "after"
          }
        ],
        "alphabetize": {
          "order": "asc"
        },
        "newlines-between": "always"
      }
    ],
    "react/jsx-key": [
      "error",
      {
        "checkFragmentShorthand": true
      }
    ],
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/no-empty-function": "off",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never",
        "children": "never"
      }
    ]
  }
}